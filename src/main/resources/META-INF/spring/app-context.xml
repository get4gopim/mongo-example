<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:mongo="http://www.springframework.org/schema/data/mongo"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/data/mongo
    http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd">

	<!-- Repository scannning -->
  	<mongo:repositories base-package="com.spring.mongo.repository" />
  
    <!-- HelloMongo and other bean scanning  -->
  	<context:component-scan base-package="com.spring.mongo"></context:component-scan>
  	
  	<!-- Creating database and mongo connection thru template -->
  	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
	     <constructor-arg name="mongo" ref="mongo"/>
	     <constructor-arg name="databaseName" value="test"/>
    </bean>
    
    <!-- Factory bean that creates the Mongo instance -->
    <bean id="mongo" class="org.springframework.data.mongodb.core.MongoFactoryBean">
     	<property name="host" value="localhost"/>
    </bean>
    
    <!-- Use this post processor to translate any MongoExceptions thrown in @Repository annotated classes -->
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
	
	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
		<property name="messageConverters">
			<list>
				<!--<ref bean="xtreamMarshallerConverter" />
				 <ref bean="castorMarshallerConverter" />-->
				 <ref bean="jaxbMarshallerConverter" />
			</list>
		</property>
	</bean>
	
	
	<!-- We only have one message converter for the RestTemplate, namely the XStream Marshller -->
	<bean id="xtreamMarshallerConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
		<constructor-arg>
			<bean class="org.springframework.oxm.xstream.XStreamMarshaller">
				<!-- Explicitly define the aliases -->
				
				<property name="aliases">
					<props>
						<prop key="movie">com.spring.mongo.app.IMDBMovie</prop>
					</props>
				</property>
				
				
				<!-- Tell XStream to find the alias names in the following classes -->
				<property name="annotatedClasses">
					<list>
						<value>com.spring.mongo.app.IMDBMovie</value>							
					</list>						
				</property>
			</bean>
		</constructor-arg>
	</bean>
	
	 			
	<bean id="castorMarshallerConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
	  <property name="marshaller" ref="castorMarshaller" />
	  <property name="unmarshaller" ref="castorMarshaller" />
	</bean>
	
	<bean id="castorMarshaller" class="org.springframework.oxm.castor.CastorMarshaller">
	</bean>
	
	<bean id="jaxbMarshallerConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
	  <property name="marshaller" ref="jaxbMarshaller" />
	  <property name="unmarshaller" ref="jaxbMarshaller" />
	</bean>
	
	<bean id="jaxbMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound" value="com.spring.mongo.app.IMDBMovie" />
    </bean>
	
 	
 	
</beans>